
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compile project(":scan-service")
    compile "com.google.guava:guava:$guavaVersion"

    compile group: 'com.lmax', name: 'disruptor', version: '3.4.2'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.4'

    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    compile group: 'com.google.zxing', name: 'core', version: '3.3.0'
}

sonarqube {
    properties {
        property "sonar.exclusions", "**/*Application.java"
    }
}
//判断 build命令是否指定属性 profile。
//例如 gradle buildTar -xtest -Pprofile=online

ext {
    if (project.hasProperty('profile')) {
        profile = project['profile']
    } else {
        profile = "all"
    }
    println "profile:" + profile
}

// task 用来新建一些目录，目录位于build/package下
task createDirs() {
	file('build/lib').mkdirs()
    file('build/package/lib').mkdirs()
    file('build/package/sql').mkdirs()
}
//task 用来复制build出来的主jar包
task copyLibs(type: Copy) {
    from('build/libs')
    from('jasypt.properties')
    from('status.hook')
    into('build/package/scan-agent')
}
//task 用来复制配置文件
task copyConf(type: Copy) {
	if(profile != 'all') {
	    println 'copy conf from src/main/resources/application-'+profile+'.yml'
	    from('src/main/resources/application-'+profile+'.yml')
	    into('build/package/scan-agent')
    } else {
    	println 'copy conf from src/main/resources all'
	    from('src/main/resources/application-test.yml')
	    into('build/package/scan-agent')
	    from('src/main/resources/application-testNet.yml')
	    into('build/package/scan-agent')
	    from('src/main/resources/application-prod.yml')
	    into('build/package/scan-agent')
	    from('jasypt.properties')
	    into('build/package/scan-agent')
    }
}

sonarqube {
    skipProject = true
}