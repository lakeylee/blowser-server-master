<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.TokenInventoryMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.TokenInventory">
    <id column="token_address" jdbcType="VARCHAR" property="tokenAddress" />
    <id column="token_id" jdbcType="VARCHAR" property="tokenId" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="token_tx_qty" jdbcType="INTEGER" property="tokenTxQty" />
    <result column="token_owner_tx_qty" jdbcType="INTEGER" property="tokenOwnerTxQty" />
    <result column="small_image" jdbcType="VARCHAR" property="smallImage" />
    <result column="medium_image" jdbcType="VARCHAR" property="mediumImage" />
    <result column="id" jdbcType="INTEGER" property="id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    token_address, token_id, `owner`, `name`, description, image, create_time, update_time, 
    token_tx_qty,token_owner_tx_qty,small_image,medium_image,id
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.TokenInventoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from token_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.platon.browser.dao.entity.TokenInventoryKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from token_inventory
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.platon.browser.dao.entity.TokenInventoryKey">
    delete from token_inventory
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.TokenInventoryExample">
    delete from token_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.TokenInventory">
    insert into token_inventory (token_address, token_id, `owner`, 
      `name`, description, image, 
      create_time, update_time, token_tx_qty,token_owner_tx_qty,small_image,medium_image
      )
    values (#{tokenAddress,jdbcType=VARCHAR}, #{tokenId,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{tokenTxQty,jdbcType=INTEGER},
      #{tokenOwnerTxQty,jdbcType=INTEGER},#{smallImage},#{mediumImage}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platon.browser.dao.entity.TokenInventory">
    insert into token_inventory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tokenAddress != null">
        token_address,
      </if>
      <if test="tokenId != null">
        token_id,
      </if>
      <if test="owner != null">
        `owner`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tokenTxQty != null">
        token_tx_qty,
      </if>
      <if test="tokenOwnerTxQty != null">
        token_owner_tx_qty,
      </if>
      <if test="small_image != null">
        small_image,
      </if>
      <if test="medium_image != null">
        medium_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tokenAddress != null">
        #{tokenAddress,jdbcType=VARCHAR},
      </if>
      <if test="tokenId != null">
        #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenTxQty != null">
        #{tokenTxQty,jdbcType=INTEGER},
      </if>
      <if test="tokenOwnerTxQty != null">
        #{tokenOwnerTxQty,jdbcType=INTEGER},
      </if>
      <if test="smallImage != null">
        #{smallImage},
      </if>
      <if test="mediumImage != null">
        #{mediumImage},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.browser.dao.entity.TokenInventoryExample" resultType="java.lang.Long">
    select count(*) from token_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update token_inventory
    <set>
      <if test="record.tokenAddress != null">
        token_address = #{record.tokenAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenId != null">
        token_id = #{record.tokenId,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null">
        `owner` = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tokenTxQty != null">
        token_tx_qty = #{record.tokenTxQty,jdbcType=INTEGER},
      </if>
      <if test="record.tokenOwnerTxQty != null">
        token_owner_tx_qty = #{record.tokenOwnerTxQty,jdbcType=INTEGER},
      </if>
      <if test="record.smallImage != null">
        small_image = #{record.smallImage},
      </if>
      <if test="record.mediumImage != null">
        medium_image = #{record.mediumImage},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update token_inventory
    set token_address = #{record.tokenAddress,jdbcType=VARCHAR},
      token_id = #{record.tokenId,jdbcType=VARCHAR},
      `owner` = #{record.owner,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      token_tx_qty = #{record.tokenTxQty,jdbcType=INTEGER},
      token_owner_tx_qty = #{record.tokenOwnerTxQty,jdbcType=INTEGER},
      small_image=#{smallImage},
      medium_image=#{mediumImage}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.TokenInventory">
    update token_inventory
    <set>
      <if test="owner != null">
        `owner` = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenTxQty != null">
        token_tx_qty = #{tokenTxQty,jdbcType=INTEGER},
      </if>
      <if test="tokenOwnerTxQty != null">
        token_owner_tx_qty = #{tokenOwnerTxQty,jdbcType=INTEGER},
      </if>
      <if test="smallImage != null">
        small_image = #{smallImage},
      </if>
      <if test="mediumImage != null">
        medium_image = #{mediumImage},
      </if>
    </set>
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.TokenInventory">
    update token_inventory
    set `owner` = #{owner,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      token_tx_qty = #{tokenTxQty,jdbcType=INTEGER},
      token_owner_tx_qty = #{tokenOwnerTxQty,jdbcType=INTEGER}
      small_image=#{smallImage},
      medium_image=#{mediumImage}
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into token_inventory
    (token_address, token_id, `owner`, `name`, description, image, create_time, update_time, 
      token_tx_qty,token_owner_tx_qty,small_image,medium_image)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.tokenAddress,jdbcType=VARCHAR}, #{item.tokenId,jdbcType=VARCHAR}, #{item.owner,jdbcType=VARCHAR},
        #{item.name,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.image,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.tokenTxQty,jdbcType=INTEGER},
       #{item.tokenOwnerTxQty,jdbcType=INTEGER},#{item.smallImage},#{item.mediumImage}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into token_inventory (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'token_address'.toString() == column.value">
          #{item.tokenAddress,jdbcType=VARCHAR}
        </if>
        <if test="'token_id'.toString() == column.value">
          #{item.tokenId,jdbcType=VARCHAR}
        </if>
        <if test="'owner'.toString() == column.value">
          #{item.owner,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'description'.toString() == column.value">
          #{item.description,jdbcType=VARCHAR}
        </if>
        <if test="'image'.toString() == column.value">
          #{item.image,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'token_tx_qty'.toString() == column.value">
          #{item.tokenTxQty,jdbcType=INTEGER}
        </if>
        <if test="'token_owner_tx_qty'.toString() == column.value">
          #{item.tokenOwnerTxQty,jdbcType=INTEGER}
        </if>
        <if test="'small_image'.toString() == column.value">
          #{item.smallImage}
        </if>
        <if test="'medium_image'.toString() == column.value">
          #{item.mediumImage}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>