<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.custommapper.CustomAddressMapper">
    <resultMap id="BaseResultMap" type="com.platon.browser.bean.CustomAddressDetail">
        <id column="address" jdbcType="VARCHAR" property="address"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
        <result column="restricting_balance" jdbcType="DECIMAL" property="restrictingBalance"/>
        <result column="staking_value" jdbcType="DECIMAL" property="stakingValue"/>
        <result column="delegate_value" jdbcType="DECIMAL" property="delegateValue"/>
        <result column="redeemed_value" jdbcType="DECIMAL" property="redeemedValue"/>
        <result column="tx_qty" jdbcType="INTEGER" property="txQty"/>
        <result column="transfer_qty" jdbcType="INTEGER" property="transferQty"/>
        <result column="delegate_qty" jdbcType="INTEGER" property="delegateQty"/>
        <result column="staking_qty" jdbcType="INTEGER" property="stakingQty"/>
        <result column="proposal_qty" jdbcType="INTEGER" property="proposalQty"/>
        <result column="candidate_count" jdbcType="INTEGER" property="candidateCount"/>
        <result column="delegate_hes" jdbcType="DECIMAL" property="delegateHes"/>
        <result column="delegate_locked" jdbcType="DECIMAL" property="delegateLocked"/>
        <result column="delegate_released" jdbcType="DECIMAL" property="delegateReleased"/>
        <result column="contract_name" jdbcType="VARCHAR" property="contractName"/>
        <result column="contract_create" jdbcType="VARCHAR" property="contractCreate"/>
        <result column="contract_createHash" jdbcType="VARCHAR" property="contractCreatehash"/>
        <result column="contract_destroy_hash" jdbcType="VARCHAR" property="contractDestroyHash"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="have_reward" jdbcType="DECIMAL" property="haveReward"/>
        <result column="erc721_tx_qty" jdbcType="INTEGER" property="erc721TxQty"/>
        <result column="erc20_tx_qty" jdbcType="INTEGER" property="erc20TxQty"/>
        <result column="contract_bin" jdbcType="LONGVARCHAR" property="contractBin"/>
        <result column="tokenType" jdbcType="VARCHAR" property="tokenType"/>
        <result column="tokenSymbol" jdbcType="VARCHAR" property="tokenSymbol"/>
        <result column="tokenName" jdbcType="VARCHAR" property="tokenName"/>
        <result column="token_tx_qty" jdbcType="VARCHAR" property="tokenTxQty"/>
    </resultMap>

    <select id="findAddressDetail" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT a.address,
               a.`type`,
               a.balance,
               a.restricting_balance,
               a.staking_value,
               a.delegate_value,
               a.redeemed_value,
               a.tx_qty,
               a.transfer_qty,
               a.delegate_qty,
               a.staking_qty,
               a.proposal_qty,
               a.candidate_count,
               a.delegate_hes,
               a.delegate_locked,
               a.delegate_released,
               a.contract_name AS contract_name,
               a.contract_create,
               a.contract_createHash,
               a.contract_destroy_hash,
               a.create_time,
               a.update_time,
               a.have_reward,
               a.erc721_tx_qty,
               a.erc20_tx_qty,
               a.contract_bin,
               b.type AS tokenType,
               b.symbol AS tokenSymbol,
               b.`name` AS tokenName,
               b.token_tx_qty
        FROM address a
                 LEFT JOIN token b ON a.address = b.address
        WHERE a.address = #{address};
    </select>

    <update id="batchUpdateByAddress">
        <foreach collection="list" item="item" separator=";">
            UPDATE address
            SET have_reward = have_reward + #{item.recoveredDelegationAmount}
            WHERE
            address = #{item.delegateAddr}
        </foreach>
    </update>

    <select id="findContractDestroy" parameterType="integer" resultType="string">
        SELECT DISTINCT
        address
        FROM
        address t1
        WHERE
        t1.contract_destroy_hash IS NOT NULL
        AND LENGTH( trim( t1.contract_destroy_hash ) ) > 0
        <if test="type!=null">
            and t1.`type` = #{type}
        </if>
    </select>

</mapper>